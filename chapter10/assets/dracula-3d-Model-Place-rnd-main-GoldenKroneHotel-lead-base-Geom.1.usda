#usda 1.0
(
    defaultPrim = "Origin"
)

def "Origin"
{
    def "BasisR0" (
        displayName = "Basis R 0"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bezier"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "cubic"
        float[] widths = [1] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, -4)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR1" (
        displayName = "Basis R 1"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "linear"
        float[] widths = [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75] (
            interpolation = "varying"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, -3)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR2" (
        displayName = "Basis R 2"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "catmullRom"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "cubic"
        float[] widths = [0, 0.10714286, 0.21428572, 0.32142857, 0.42857143, 0.53571427, 0.64285713] (
            interpolation = "vertex"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, -2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR3" (
        displayName = "Basis R 3"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bezier"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "linear"
        float[] widths = [0.625] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR4" (
        displayName = "Basis R 4"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "cubic"
        float[] widths = [0, 0.1, 0.2, 0.3, 0.4] (
            interpolation = "varying"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR5" (
        displayName = "Basis R 5"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "catmullRom"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "linear"
        float[] widths = [0, 0.05357143, 0.10714286, 0.16071428, 0.21428572, 0.26785713, 0.32142857] (
            interpolation = "vertex"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR6" (
        displayName = "Basis R 6"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bezier"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "cubic"
        float[] widths = [0.25] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, 2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisR7" (
        displayName = "Basis R 7"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform bool doubleSided = 1
        normal3f[] normals = [(-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3), (-1, -0.3, 0.3)] (
            interpolation = "varying"
        )
        uniform token type = "linear"
        float[] widths = [0, 0.017857144, 0.035714287, 0.05357143, 0.071428575, 0.08928572, 0.10714286] (
            interpolation = "varying"
        )
        double3 xformOp:translate = (-4.117647058823529, 0, 3)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL0" (
        displayName = "Basis L 0"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform token type = "linear"
        float[] widths = [0, 0, 0, 0, 0, 0, 0] (
            interpolation = "vertex"
        )
        double3 xformOp:translate = (2.481203007518797, 0, -4)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL1" (
        displayName = "Basis L 1"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "catmullRom"
        uniform token type = "cubic"
        float[] widths = [0.125] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (2.481203007518797, 0, -3)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL2" (
        displayName = "Basis L 2"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bezier"
        uniform token type = "linear"
        float[] widths = [0, 0.035714287, 0.071428575, 0.10714286, 0.14285715, 0.17857143, 0.21428572] (
            interpolation = "varying"
        )
        double3 xformOp:translate = (2.481203007518797, 0, -2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL3" (
        displayName = "Basis L 3"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform token type = "cubic"
        float[] widths = [0, 0.05357143, 0.10714286, 0.16071428, 0.21428572, 0.26785713, 0.32142857] (
            interpolation = "vertex"
        )
        double3 xformOp:translate = (2.481203007518797, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL4" (
        displayName = "Basis L 4"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "catmullRom"
        uniform token type = "linear"
        float[] widths = [0.5] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (2.481203007518797, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL5" (
        displayName = "Basis L 5"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bezier"
        uniform token type = "cubic"
        float[] widths = [0, 0.20833333, 0.41666666] (
            interpolation = "varying"
        )
        double3 xformOp:translate = (2.481203007518797, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL6" (
        displayName = "Basis L 6"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "bspline"
        uniform token type = "linear"
        float[] widths = [0, 0.10714286, 0.21428572, 0.32142857, 0.42857143, 0.53571427, 0.64285713] (
            interpolation = "vertex"
        )
        double3 xformOp:translate = (2.481203007518797, 0, 2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "BasisL7" (
        displayName = "Basis L 7"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-BasisS-lead-base-whole.1.usda@
    )
    {
        uniform token basis = "catmullRom"
        uniform token type = "cubic"
        float[] widths = [0.875] (
            interpolation = "constant"
        )
        double3 xformOp:translate = (2.481203007518797, 0, 3)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def "Ground" (
        displayName = "Ground"
        doc = "Main ground where Golden Krone exists"
        prepend references = @dracula-3d-Geom-Shape-rnd-main-GroundPlane-lead-base-whole.1.usda@
    )
    {
        uniform bool doubleSided = 1
    }

    def Sphere "Volume" (
        doc = "Main volume for Golden Krone"
    )
    {
        double radius = 2
        float3 xformOp:rotateXYZ (
            assetInfo = {
                dictionary grill = {
                    bool database = 1
                }
            }
        )
        float3 xformOp:rotateXYZ.timeSamples = {
            0: (12, 0, 0),
        }
        double3 xformOp:translate = (0, 2, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
    }

    def Cube "TopBackLeft" (
        doc = "Golden Krone's top back left section"
    )
    {
        double3 xformOp:translate = (-2, 6, -2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Capsule "TopFrontLeft" (
        doc = "Golden Krone's top from left section"
    )
    {
        double3 xformOp:translate = (-2, 6, 2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cylinder "TopBackRight" (
        doc = "Golden Krone's top back right section"
    )
    {
        double3 xformOp:translate = (2, 6, -2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cone "TopFrontRight" (
        doc = "Golden Krone's top front right section"
    )
    {
        double3 xformOp:translate = (2, 6, 2)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }
}

